/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id 'eclipse'

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    // Plugin to Build web assets from gulp
    id 'com.github.node-gradle.gulp' version '1.5.3'

    id "ru.akman.vscode-tasks" version "0.4.0"
    id "com.dorongold.task-tree" version "1.5"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:27.1-jre'

    // Server dependencies
    implementation 'org.postgresql:postgresql:42.2.12.jre6';
	implementation 'org.springframework.security:spring-security-crypto:5.0.15.RELEASE';
	implementation 'io.vertx:vertx-core:4.0.0-milestone4';
	implementation 'io.vertx:vertx-web:4.0.0-milestone4';
	implementation 'org.netbeans.external:org-apache-commons-lang:RELEASE113';
	implementation 'com.10duke.client.jwt:jjwt:1.0.1';
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.1';
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.1'
	//implementation 'org.bouncycastle:bcprov-debug-jdk15to18:1.64';
	implementation 'commons-validator:commons-validator:1.6';
	implementation 'org.apache.logging.log4j:log4j-api:2.13.1';
	implementation 'org.apache.logging.log4j:log4j-core:2.13.1';
	implementation 'org.fusesource.jansi:jansi:1.18';
	implementation 'org.bouncycastle:bcprov-jdk15on:1.60';

    //implementation 'com.github.ben-manes.caffeine:caffeine:2.8.1';
    implementation 'com.qwazr:jdbc-cache-driver:1.3.1';
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3';

    testImplementation 'io.vertx:vertx-junit5:4.0.0-milestone4'
    testImplementation 'org.assertj:assertj-core:3.15.0'
    testImplementation 'io.vertx:vertx-junit5-web-client:4.0.0-milestone4'
	testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')

    //runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:3.0.0-M1';
}

application {
    // Define the main class for the application
    mainClassName = 'de.icytv.scribble.App'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task initAll {
    dependsOn 'npmInstall'
    dependsOn 'installGulp'
}

task watch(type: GulpTask) {
    args = ["watch", "--out", "static"]
}

task buildGulp(type: GulpTask) {
    args = ["default", "--out", "static"]
}


// TODO Implement properly...........
// task watchAll(type: JavaExec) {
//     main = "de.icytv.scribble.App";
//     classpath = sourceSets.main.runtimeClasspath
//     def proc = (System.getProperty("user.dir") + "/node_modules/.bin/gulp.cmd watch").execute();
//     if(project.hasProperty("showGulp")) {
//         proc.consumeProcessOutput(System.out, System.err);
//     }
//     //proc.waitFor()
// }

task devFront(type: GulpTask) {
    args = ["watch", "--browser"]
}